<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.sonatype.nexus.internal.capability.storage.CapabilityStorageItemDAO">

  <insert id="createSchema">
    CREATE TABLE IF NOT EXISTS capability_storage_item (
      id         ${UUID_TYPE} NOT NULL,
      version    INT          NOT NULL,
      type       VARCHAR(100) NOT NULL,
      enabled    BOOLEAN      NOT NULL,
      notes      VARCHAR(400) NULL,
      properties ${JSON_TYPE} NOT NULL,

      CONSTRAINT pk_capability_storage_item_id PRIMARY KEY (id)
    );
  </insert>

  <!--
  Note: capability registry does its own encryption of sensitive form properties,
  so we need to use the raw MapTypeHandler to avoid any double-encryption issues
  -->

  <resultMap id="CapabilityStorageItemData" type="CapabilityStorageItemData">
    <result property="properties" column="properties" typeHandler="MapTypeHandler"/>
    <!-- use automatic mapping for the other parts of the result -->
  </resultMap>

  <select id="browse" resultMap="CapabilityStorageItemData">
    SELECT * FROM capability_storage_item;
  </select>

  <insert id="create" parameterType="CapabilityStorageItemData">
    INSERT INTO capability_storage_item (id, version, type, enabled, notes, properties)
        values(#{id}, #{version}, #{type}, #{enabled}, #{notes},
               #{properties, typeHandler=MapTypeHandler});
  </insert>

  <select id="read" resultMap="CapabilityStorageItemData">
    SELECT * FROM capability_storage_item WHERE id = #{value};
  </select>

  <update id="update" parameterType="CapabilityStorageItemData">
    UPDATE capability_storage_item SET
        version = #{version}, type = #{type}, enabled = #{enabled}, notes = #{notes},
        properties = #{properties, typeHandler=MapTypeHandler}
        WHERE id = #{id};
  </update>

  <delete id="delete">
    DELETE FROM capability_storage_item WHERE id = #{value};
  </delete>

</mapper>
