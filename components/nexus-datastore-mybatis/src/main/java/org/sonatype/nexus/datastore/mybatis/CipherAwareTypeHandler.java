package org.sonatype.nexus.datastore.mybatis;

import org.sonatype.nexus.crypto.PbeCipherFactory.PbeCipher;

import org.apache.ibatis.type.BaseTypeHandler;
import org.apache.ibatis.type.TypeHandler;

import static com.google.common.base.Preconditions.checkState;

/**
 * MyBatis {@link TypeHandler} that's aware of the database cipher.
 *
 * @since 3.21
 */
public abstract class CipherAwareTypeHandler<T>
    extends BaseTypeHandler<T>
{
  private PbeCipher cipher;

  /**
   * Enables encryption-at-rest for content generated by this handler using the given database cipher.
   */
  final void setCipher(final PbeCipher cipher) {
    // sanity check: the cipher should only be set once by the owning data store
    checkState(this.cipher == null || this.cipher.equals(cipher), "Cipher has already been set");
    this.cipher = cipher;
  }

  protected final PbeCipher cipher() {
    checkState(cipher != null, "Cipher has not been set");
    return cipher;
  }
}
